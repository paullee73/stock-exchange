models:
  image: tp33/django
  container_name: models
  external_links:
    - mysql:db
  volumes:
    - ../app/models:/app/models
  ports:
    - "8001:8000"
  command: bash -c "python stockexchange/manage.py migrate --run-syncdb && python stockexchange/manage.py loaddata /stockexchange/db.json && mod_wsgi-express start-server --reload-on-changes --working-directory /app/models /app/stockexchange/stockexchange/wsgi.py"

exp:
  image: tp33/django
  container_name: exp
  links:
    - models:models-api
    - kafka:kafka
    - es:es
  ports:
    - "8002:8000"
  volumes:
    - ../app/expservice:/app/expservice
  command: "mod_wsgi-express start-server --reload-on-changes --working-directory /app/exp /app/exp/exp/wsgi.py"

web:
  image: tp33/django
  container_name: web
  links:
    - exp:exp-api
  ports:
    - "8000:8000"
  volumes:
    - ../app/frontend:/app/frontend
  command: "mod_wsgi-express start-server --reload-on-changes --working-directory /app/web /app/web/web/wsgi.py"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
     - ../batch:/batch
   command: "python batch/scrp.py"

# selenium-chrome:
#   image: selenium/standalone-chrome
#   container_name: selenium-chrome
#   links:
#     - web:web
#   ports:
#     - "4444:4444"

# selenium-test:
#   image: tp33/django
#   container_name: selenium-test
#   links:
#     - selenium-chrome:selenium-chrome
#     - web:web
#   volumes:
#     - ../app/selenium:/app/selenium
#   command: bash -c "pip install selenium==3.14.0 && tail -f /dev/null"